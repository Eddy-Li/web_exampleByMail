<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.myit"/>
    <!--启用aop:aspectj框架的自动代理,基于注解的方式需要在xml文件中加入如下配置,使AspectJ注解起作用：自动为匹配的类生成代理对象-->
    <aop:aspectj-autoproxy/>


    <!-- ==================================加载properties配置文件=========================+========================== -->
    <!-- =========================================================================================================== -->
    <!--加载properties配置文件-->
    <!--在此xml引用方式为<property name="username" value="${jdbc.database.username}"/>-->
    <!--在类的字段上引用方式为@Value("${jdbc.database.username}")-->
    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:mail/mail.properties</value>
            </array>
        </property>
    </bean>

    <!-- ============================================Spring MVC===================================================== -->
    <!-- =========================================================================================================== -->
    <!--spring mvc注解驱动-->
    <mvc:annotation-driven/>
    <!--使用默认的Servlet来响应静态文件-->
    <mvc:default-servlet-handler/>
    <!-- =================@ResponseBody===================== -->
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- ============================================mail=========================================================== -->
    <!-- =========================================================================================================== -->
    <!--配置邮件接口 -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}" />
        <property name="username" value="${mail.smtp.username}" />
        <property name="password" value="${mail.smtp.password}" />
        <property name="defaultEncoding" value="${mail.smtp.defaultEncoding}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
            </props>
        </property>
    </bean>

    <!-- freemarker模板发送邮件 -->
    <bean id="freeMarkerConfigurationFactoryBean"
          class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
        <!-- 设置FreeMarker环境变量 -->
        <property name="freemarkerSettings">
            <props>
                <prop key="default_encoding">UTF-8</prop>
            </props>
        </property>
    </bean>

</beans>